{"version":3,"sources":["boxx.svg","gmail.svg","Search.js","BookCard.js","BookList.js","Books.js","Navagation.js","Home.js","MyBooks.js","Contact.js","footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Search","props","className","onSubmit","seachBook","action","onChange","handleSearch","type","BookCard","src","book","imageLinks","thumbnail","title","authors","publishedDate","substring","class","onClick","handleFaveToggle","BookList","books","map","item","index","key","e","volumeInfo","Books","searchBook","preventDefault","getBooks","state","searchField","setState","target","value","this","Component","Navagation","href","boxx","width","height","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","MyBooks","React","particleOpt","particles","number","density","enable","value_area","Home","params","allbook","console","log","length","HandleClear","clearAll","Contact","mail","Footer","App","MyBook","bookIndex","indexOf","splice","word","axios","get","then","res","data","items","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea5553df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boxx.c6fe4c3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.deda33ae.svg\";","import React from 'react';\r\n\r\nconst Search =(props) => {\r\n    return(\r\n       <div className=\"search\">\r\n        <form onSubmit={props.seachBook}action =\"\">\r\n        <input onChange={props.handleSearch} type=\"text\"/> \r\n        <button type=\"Submit\"> Search</button>   \r\n            </form>   \r\n           \r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst BookCard =(props) => {\r\n    return(\r\n        \r\n        // author={item.volumeInfo.authors}\r\n        \r\n        <div className=\"card my-card\" >\r\n       <img src={props.book.imageLinks.thumbnail}/>\r\n         {/* <img src={props.image} className=\"card-img-top\" alt=\"...\"/> */}\r\n            <div className=\"card-body text-center \">\r\n                <h5 className=\"card-title\">{props.book.title}</h5>\r\n                <h6>{props.book.authors}</h6>\r\n                <p className=\"card-text\">publishedDate: {props.book.publishedDate === '0000' ? 'Not available':props.book.publishedDate.substring(0,4)}</p>\r\n                <div class=\"card-footer bg-transparent border-success\">\r\n\r\n                <button  className=\"btn btn-info mybtn\" onClick={props.handleFaveToggle}>Add To MyBooks </button>\r\n        </div>                \r\n        </div>\r\n        </div>\r\n        \r\n    \r\n    );\r\n}\r\n\r\nexport default BookCard;\r\n\r\n{/* //    <div className=\"card-container\">\r\n    //        <img src={props.image}alt=\"\"/>\r\n    //        <div className =\"desc\">\r\n    //            <h3>{props.title}</h3>\r\n    //            <h4> Author: {props.author}</h4>\r\n    //            <p> publishedDate: {props.published === '0000' ? 'Not available':props.published.substring(0,4)}</p>\r\n    //        </div>\r\n        \r\n        \r\n    //    </div> */}","import React from 'react';\r\nimport BookCard from './BookCard';\r\n\r\nconst BookList =(props) => {\r\n\r\n    // const tt = (item)=> {\r\n    //     props.handleFaveToggle(item)\r\n    // }\r\n    return(\r\n       <div className=\"list\">\r\n        {\r\n            props.books.map((item ,index)=>{\r\n                return <BookCard\r\n                          key={index}  \r\n                        //   handleFaveToggle={tt}\r\n                        handleFaveToggle={(e)=>{props.handleFaveToggle(item)}}\r\n                        book={item.volumeInfo}\r\n                          />\r\n\r\n            })\r\n        }\r\n\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default BookList;","import React, {Component} from 'react';\r\nimport Search from './Search';\r\nimport axios from 'axios';\r\nimport BookList from './BookList';\r\n\r\n\r\nclass Books extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            books:[],\r\n            searchField:''\r\n        }\r\n    }\r\n    \r\nsearchBook =(e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.getBooks(this.state.searchField)\r\n//   axios\r\n//    .get(`https://www.googleapis.com/books/v1/volumes?q=${this.state.searchField}`)\r\n//    .then((res) => { \r\n//        this.setState({\r\n//            books:res.data.items\r\n//         //    books:res.data.items\r\n//        })\r\n//     //    console.log(res.data.items[0].volumeInfo.title);\r\n//     //    console.log(res.data.items[0].volumeInfo.imageLinks.thumbnail);\r\n//     //    console.log(res.data.items[0].volumeInfo.authors);\r\n//     //    console.log(res.data.items[0].volumeInfo.language);\r\n//     //    console.log(res.data.items[0].volumeInfo.description);\r\n\r\n//    });\r\n}\r\n\r\n\r\n    handleSearch=(e) => { \r\n        this.setState({searchField:e.target.value})\r\n    }\r\n    render() {\r\n        // const fox = this.state.books.map((item, index)=> {\r\n        //     return <div>\r\n        //         <h2> Title: {''} {item.volumeInfo.title}</h2>\r\n        //         <img src={item.volumeInfo.imageLinks.thumbnail} />\r\n        //         <h6> Language:{ ''}    {item.volumeInfo.language}</h6>\r\n        //         <p>publishedDate:{''}  {item.volumeInfo.publishedDate}</p>\r\n        //         <p>{item.volumeInfo.description}</p>\r\n\r\n        //     </div>\r\n        // })\r\n        return (\r\n            <div>\r\n<Search seachBook={this.searchBook} handleSearch= {this.handleSearch} />\r\n {/* <div>{fox}</div> */}\r\n <BookList books={this.props.books} handleFaveToggle={this.props.handleFaveToggle} />\r\n \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Books;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport boxx from './boxx.svg'\r\n\r\n\r\n\r\nclass Navagation extends React.Component{\r\n    render(){\r\n\r\n        return(\r\n  \r\n         <nav className=\"navbar navbar-expand-md navbar-light bg-info\">\r\n         <a className=\"navbar-brand\" href=\"./Home\">\r\n         <img src={boxx} width=\"50\" height=\"50\" alt=\"\"/> \r\n          </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n         </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n      <Link  className=\"nav-link\" to='/'>Home</Link> \r\n      </li>\r\n      <li className=\"nav-item active\">\r\n      <Link  className=\"nav-link\" to='/Books'>Books</Link>\r\n      </li>\r\n      <li className=\"nav-item active\">\r\n      <Link  className=\"nav-link\" to='/MyBooks'> MyBooks <span className=\"Add\">{this.props.MyBooks}</span></Link>\r\n      </li>\r\n      <li className=\"nav-item active\">\r\n      <Link  className=\"nav-link\" to='/Contact'> Contact </Link>\r\n      </li>\r\n    </ul>\r\n   \r\n  </div>\r\n</nav>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Navagation;","import React, {Component} from 'react'\r\nimport Particles from 'react-particles-js';\r\n\r\n\r\nconst particleOpt ={\r\n    particles:{\r\n        number:{\r\n            value:150,\r\n            density:{\r\n                enable:true,\r\n                value_area:800\r\n            }\r\n        }\r\n    }\r\n}\r\nconst Home = (props) => {\r\n    return(\r\n         <div>\r\n\r\n<div>\r\n\r\n\r\n<p className=\"this-app\">\r\n\r\n\r\n” Once You Learn To Read,You Will Be Forever Free ”\r\n  \r\n</p>\r\n\r\n\r\n              <Particles \r\n              params={particleOpt}\r\n             />\r\n        \r\n        </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nclass MyBooks extends Component {\r\n    \r\n    render() {\r\n        let allbook;\r\n        {console.log(this.props.MyBooks.length)}\r\n        if( this.props.MyBooks.length>0 )\r\n        {console.log(this.props.MyBooks)\r\n            allbook=this.props.MyBooks.map((book,index)=>{\r\n            \r\n            return (\r\n                     <div className=\"card my-card\" >\r\n                <img  src={book.volumeInfo.imageLinks.thumbnail}/> \r\n                {/* <img src={book.imageLinks.thumbnail}/> */}\r\n                <div className=\"card-body  card-boddy\">\r\n                <h5 className=\"card-title\"> {book.volumeInfo.title}</h5>\r\n                <h6> {book.volumeInfo.authors} </h6> \r\n                <p className=\"card-text\"> {book.publishedDate} </p> \r\n                <button  className=\"btn btn-danger mybtn\" onClick={()=>this.props.HandleClear(book)}> remove From MyBooks </button>\r\n                </div>\r\n                </div>\r\n        )\r\n    })} \r\n    return (\r\n        \r\n                <div className=\"container\">\r\n                    <div className=\"column\">\r\n                     <div className=\"row\">\r\n                     {allbook}\r\n                     </div>\r\n                     </div>\r\n    <button className=\"btn2 btn-danger\" onClick={this.props.clearAll} >Clear All</button>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBooks;","import React from 'react'\r\nimport mail from './gmail.svg'\r\nimport Particles from 'react-particles-js';\r\n\r\nconst particleOpt ={\r\n    particles:{\r\n        number:{\r\n            value:150,\r\n            density:{\r\n                enable:true,\r\n                value_area:800\r\n            }\r\n        }\r\n    }\r\n}\r\nconst Contact = (props) => {\r\n    return(\r\n<div>\r\n<p className=\"this-app email\">\r\n <span> Dalia Abdullah      <a href=\"mailto:dalia.91a@gmail.com\"> \r\n <img src={mail} alt=\"#\" height='30px' /></a>\r\n  </span> \r\n </p>\r\n <Particles \r\n              params={particleOpt} />\r\n \r\n       \r\n        </div>\r\n    );\r\n}\r\nexport default Contact;","import React from \"react\";\r\nconst Footer = () => (\r\n  \r\n\r\n <footer>\r\n    \r\n    <p className=\"copyright\">\r\n       Created with &hearts; by\r\n      <span> Dalia Abdullah</span>\r\n    </p>\r\n  </footer>\r\n  \r\n);\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\n import Books from './Books';\n import Navagation from './Navagation';\n import {BrowserRouter as Router, Route, Link} from 'react-router-dom'\n import Home from './Home';\n import MyBooks from './MyBooks';\n import Contact from './Contact'\n import axios from 'axios';\n import Footer from \"./footer\";\n\n class App extends React.Component{\n\nconstructor(props){\n  super(props)\n  this.state={\n    books:[],\n    MyBooks:[]\n\n  }\n}\n\n\nhandleFaveToggle = (book)=> {\n  console.log(book)\n  let MyBook=[...this.state.MyBooks];\n  \n\n    // MyBook.push(book);\n    MyBook = [...MyBook,book]\n    //  console.log(`Adding ${book.title} To MyBooks`)\n   \n   this.setState({MyBooks: MyBook})\n }\n\n HandleClear =(book)=>{\n   console.log(book)\n  let MyBook=[...this.state.MyBooks];\n  const bookIndex = MyBook.indexOf(book)\n  if (bookIndex !== -1){\n    MyBook.splice(bookIndex, 1);\n  }\n  // console.log(book)\n  this.setState({\n    MyBooks: MyBook\n  })\n  // console.log(this.state.books)\n}\n\nclearAll=()=>{\n  // console.log(\"llllllllll\")\n  this.setState({\n    MyBooks: []\n  })\n  // console.log(this.state.MyBook)\n}\n\n\n\n  getBooks =(word)=>{\n    axios\n   .get(`https://www.googleapis.com/books/v1/volumes?q=${word}`)\n   .then((res) => { \n       this.setState({\n           books:res.data.items\n        //    books:res.data.items\n       })\n    //    console.log(res.data.items[0].volumeInfo.title);\n    //    console.log(res.data.items[0].volumeInfo.imageLinks.thumbnail);\n    //    console.log(res.data.items[0].volumeInfo.authors);\n    //    console.log(res.data.items[0].volumeInfo.language);\n    //    console.log(res.data.items[0].volumeInfo.description);\n\n   });\n  }\n\n\n  render(){\n    \n  return (\n    <>\n    \n       \n      <Router>\n      <Navagation MyBooks={this.state.MyBooks.length} />\n      \n        \n\n    <div>\n      \n     <Route exact path ='/' component={Home}/>\n     < Route path ='/Books' render={(...props) => \n     <Books books={this.state.books}\n      getBooks={this.getBooks}\n       MyBooks={this.state.MyBooks}\n        handleFaveToggle={this.handleFaveToggle}/>}/>\n        \n     < Route path ='/MyBooks' render={(...props) => \n     <MyBooks MyBooks={this.state.MyBooks}  HandleClear={this.HandleClear} clearAll={this.clearAll}/>}/>\n     {/* <Route path='/contact' component={Contact}/> */}\n     <Route  path ='/Contact' component={Contact}/>\n     <Footer/>\n   </div>\n   </Router>\n  \n   </>\n \n  );\n\n}\n\n }\nexport default App;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}